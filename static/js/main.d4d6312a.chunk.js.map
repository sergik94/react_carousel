{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","step","props","frameSize","itemWidth","animationDuration","infinite","prevButtonDisable","nextButtonDisable","position","count","handleClick","event","target","currentTarget","imgList","document","querySelector","prevButton","nextButton","imgAmount","images","length","setState","style","transform","window","console","info","componentDidUpdate","prevState","difference","this","alt","className","top","type","onClick","disabled","width","transition","borderRadius","map","img","src","id","min","max","defaultValue","onInput","value","defaultChecked","checked","React","Component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d4d6312a.chunk.js","sourcesContent":["/* eslint-disable no-empty-pattern */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable no-plusplus */\nimport React from 'react';\nimport './Carousel.scss';\n\ninterface General {\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\ntype Props = General & {\n  images: string[];\n};\n\ntype State = General & {\n  prevButtonDisable: boolean;\n  nextButtonDisable: boolean;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    step: this.props.step,\n    frameSize: this.props.frameSize,\n    itemWidth: this.props.itemWidth,\n    animationDuration: this.props.animationDuration,\n    infinite: this.props.infinite,\n    prevButtonDisable: true,\n    nextButtonDisable: false,\n  };\n\n  position = 0;\n\n  count = this.state.frameSize;\n\n  handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const target = event.currentTarget as HTMLButtonElement;\n    const imgList = document\n      .querySelector('.Carousel__list') as HTMLElement;\n    const prevButton = document\n      .querySelector('.Carousel__prevButton') as HTMLButtonElement;\n    const nextButton = document\n      .querySelector('.Carousel__nextButton') as HTMLButtonElement;\n    const imgAmount = this.props.images.length;\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.state;\n\n    if (target === prevButton) {\n      this.count -= step;\n      this.setState({ nextButtonDisable: false });\n\n      if (this.count <= frameSize) {\n        this.count = frameSize;\n        this.position = 0;\n        this.setState({ prevButtonDisable: true });\n      } else {\n        this.position += step * itemWidth;\n      }\n\n      imgList.style.transform = `translateX(${this.position}px)`;\n    }\n\n    if (target === nextButton) {\n      this.count += step;\n      this.setState({ prevButtonDisable: false });\n      if (this.count >= imgAmount) {\n        if (infinite) {\n          this.count -= imgAmount;\n          this.position = 0;\n        } else {\n          this.count = imgAmount;\n          this.position = -(imgAmount - frameSize) * itemWidth;\n          this.setState({ nextButtonDisable: true });\n        }\n      } else {\n        this.position -= step * itemWidth;\n      }\n\n      window.console.info(this.count);\n      imgList.style.transform = `translateX(${this.position}px)`;\n    }\n  };\n\n  componentDidUpdate = ({}, prevState: State) => {\n    if (this.position === 0) {\n      this.count = this.state.frameSize;\n\n      return;\n    }\n\n    const imgList = document\n      .querySelector('.Carousel__list') as HTMLElement;\n    const difference = this.state.frameSize - prevState.frameSize;\n\n    this.position += difference * this.state.itemWidth;\n    this.count += difference;\n    imgList.style.transform = `translateX(${this.position}px)`;\n  };\n\n  render() {\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      prevButtonDisable,\n      nextButtonDisable,\n    } = this.state;\n\n    const { images } = this.props;\n    let alt = 0;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__images-container\"\n          style={{\n            top: `${50 - (itemWidth - 130) / 2}px`,\n          }}\n        >\n          <button\n            type=\"button\"\n            className=\"Carousel__prevButton button\"\n            onClick={this.handleClick}\n            disabled={prevButtonDisable}\n          />\n\n          <div\n            className=\"Carousel__images\"\n            style={{\n              width: `${itemWidth * frameSize}px`,\n              transition: `width ${animationDuration}ms`,\n              borderRadius: `${itemWidth / 2}px`,\n            }}\n          >\n            <ul\n              className=\"Carousel__list\"\n              style={{\n                transition: `transform ${animationDuration}ms`,\n              }}\n            >\n              {images.map(img => {\n                alt++;\n\n                return (\n                  (\n                    <li key={`${alt}`} className=\"Carousel__item\">\n                      <img\n                        src={img}\n                        alt={`${alt}`}\n                        style={{\n                          width: `${itemWidth}px`,\n                        }}\n                      />\n                    </li>\n                  )\n                );\n              })}\n            </ul>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"Carousel__nextButton button\"\n            onClick={this.handleClick}\n            disabled={nextButtonDisable}\n            data-cy=\"next\"\n          />\n        </div>\n\n        <div\n          className=\"Carousel__settings\"\n        >\n          <label className=\"Carousel__label\"> Step:\n            <input\n              className=\"Carousel__input\"\n              id=\"step\"\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              defaultValue={step}\n              onInput={(event) => {\n                this.setState({ step: +event.currentTarget.value });\n              }}\n            />\n          </label>\n          <label className=\"Carousel__label\"> Number of visible images per page:\n            <input\n              className=\"Carousel__input\"\n              id=\"frameSize\"\n              type=\"number\"\n              min=\"1\"\n              max={images.length}\n              defaultValue={frameSize}\n              onInput={(event) => {\n                this.setState({ frameSize: +event.currentTarget.value });\n              }}\n            />\n          </label>\n          <label className=\"Carousel__label\"> Image width, [px]:\n            <input\n              className=\"Carousel__input\"\n              id=\"itemWidth\"\n              type=\"number\"\n              min=\"50\"\n              max=\"250\"\n              step=\"5\"\n              defaultValue={itemWidth}\n              onInput={(event) => {\n                this.setState({ itemWidth: +event.currentTarget.value });\n              }}\n            />\n          </label>\n          <label className=\"Carousel__label\"> Animation duration, [ms]:\n            <input\n              className=\"Carousel__input\"\n              id=\"animationDuration\"\n              type=\"number\"\n              min=\"0\"\n              step=\"100\"\n              defaultValue={animationDuration}\n              onInput={(event) => {\n                this.setState({\n                  animationDuration: +event.currentTarget.value,\n                });\n              }}\n            />\n          </label>\n          <label className=\"Carousel__label\"> Infinite:\n            <input\n              className=\"Carousel__input\"\n              id=\"infinite\"\n              type=\"checkbox\"\n              defaultChecked={infinite}\n              onInput={(event) => {\n                this.setState({\n                  infinite: event.currentTarget.checked,\n                });\n\n                if (this.count === this.props.images.length) {\n                  this.setState({\n                    nextButtonDisable: !nextButtonDisable,\n                  });\n                }\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          Carousel with {images.length} images\n        </h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}